version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:16-alpine
    container_name: aicloud-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-aicloud_users}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7.0
    container_name: aicloud-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-admin}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-aicloud_storage}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "${MONGO_PORT:-27017}:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/aicloud_storage --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: aicloud-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Object Storage (MinIO)
  minio:
    image: minio/minio
    container_name: aicloud-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Services
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: aicloud-api-gateway
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-yoursecretkey}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-3600}
      - USER_SERVICE_URL=http://user-service:3001
      - STORAGE_SERVICE_URL=http://storage-service:3002
      - AI_ORCHESTRATION_SERVICE_URL=http://ai-orchestration:3003
      - LLM_ASSISTANT_SERVICE_URL=http://llm-assistant:3004
      - REDIS_URL=redis://redis:6379
    ports:
      - "${API_GATEWAY_PORT:-3000}:3000"
    depends_on:
      - redis
      - user-service
      - storage-service

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: aicloud-user-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-yoursecretkey}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-3600}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_DATABASE=${POSTGRES_DB:-aicloud_users}
      - DB_SYNC=${DB_SYNC:-true}
      - EMAIL_SERVICE_ENABLED=${EMAIL_SERVICE_ENABLED:-false}
    depends_on:
      - postgres

  storage-service:
    build:
      context: ./backend/storage-service
      dockerfile: Dockerfile
    container_name: aicloud-storage-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASSWORD:-admin}@mongodb:27017/${MONGO_DB:-aicloud_storage}?authSource=admin
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=${MINIO_ROOT_USER:-minioadmin}
      - S3_SECRET_KEY=${MINIO_ROOT_PASSWORD:-minioadmin}
      - S3_BUCKET=${STORAGE_BUCKET:-aicloud-storage}
      - THUMBNAIL_SIZE=300
    volumes:
      - storage_uploads:/app/uploads
    depends_on:
      - mongodb
      - minio

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${API_BASE_URL:-http://localhost:3000/api}
    container_name: aicloud-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - api-gateway

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  minio_data:
  storage_uploads:
