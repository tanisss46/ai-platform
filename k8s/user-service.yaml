apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: aicloud
  labels:
    app: user-service
spec:
  selector:
    app: user-service
  ports:
    - port: 3001
      targetPort: 3001
      name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: aicloud
  labels:
    app: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: aicloud/user-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        envFrom:
        - configMapRef:
            name: aicloud-config
        - secretRef:
            name: aicloud-secrets
        env:
        - name: PORT
          value: "3001"
        - name: DB_HOST
          value: "$(POSTGRES_HOST)"
        - name: DB_PORT
          value: "$(POSTGRES_PORT)"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: aicloud-secrets
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aicloud-secrets
              key: POSTGRES_PASSWORD
        - name: DB_DATABASE
          value: "$(POSTGRES_DB)"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 10